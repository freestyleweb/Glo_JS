'use strict'; // Строгий режим написания кода

// Подключение скрипта к HTML-странице
	<script src="script.js"></script>

// ПЕРЕМЕННЫЕ
var
let
const

// Объявление переменных
// Создает переменную в момент использования и экономит память браузера.
// Видна только в текущем блоке (типа локальной переменной в 1С)
	let newPerem = 0;  

// еще вариант объявления переменной
// Видна из любой конструкции в коде (типа глобальной переменной в 1С)
	var oldPerem = 0;

// объявление констант
// работает аналогично let
	const pi = 3.14;

// ОБЪЕКТЫ
// Пример объекта:
// Где let persone – объявление переменной persone,
// name – одно из свойств объекта, “John” – значение этого свойства
// и т.д.

	let persone = {
				name: "John",
				age: 25,
				isMarried: false
	}           
	
// Пример специльного объекта (массив):
	let arr = ['dog.png', 'cat.jpg', 'fish.gif'];

// ВСПЛЫВАЮЩИЕ ОКНА
// Всплывающее окно
	alert('Hello world!');

// Варианты объявления переменной со значением, полученным от пользователя
	let answer = confirm('Are you here?');

	let answer = prompt('Есть ли Вам 18?', 'Да');
	
	// Вывод результата в консоль
	console.log(answer);
	
	// Проверка выводимого типа данных
	console.log(typeof(answer));

	// Унарный плюс перед prompt преобразует строку в число
	let answer = +prompt('Есть ли Вам 18?', 'Да');
	

	// ОПЕРАТОРЫ
	console.log('arr' + '- object'); // сложение строк (конкатинация)
	console.log(4 + '- object'); // сложение числа и строки

	// Инкремент и Декремент - увеличивают или уменьшают, соответственно, значение на единицу
	// Могут применяться с префиксной или постфиксной формой
	let incr = 10,
			decr = 10;
	incr++; //увеличиваем на единицу (инкремент, постфиксная форма)
	decr--; //уменьшаем на единицу (декремент, постфиксная форма)

	console.log(incr);
	console.log(decr);

	//Остаток от деления
	console.log(5%2);

	// = - Оператор присваивания
	let incr = 10;

	// == - Проверка на равенство
	console.log('2' == 2); //Сравнивает по значениям, поэтому результатом выполнения будет true

	// === - Строгая проверка по типам данных
	console.log('2' === 2); //Сравнивает по типам данных, поэтому результатом выполнения будет false

	// Логический оператор И (&&)
	// Возвращает истину только тогда, когда все аргументы истинны
	// Если хотя бы один аргумент false - возвращает false
	let isChecked = true,
			isClose = true;
			
	// Логический оператор ИЛИ (||)
	// Возвращает истину, если хотя бы один аргумент является истиной.
	// Ложь - только если все аргументы ложны (false)
	let isChecked = true,
			isClose = false;
	console.log(isChecked && isClose);


// Оператор отрицания (!). Обращает значение в обратное

________________________________________________________

// УСЛОВИЯ И ЦИКЛЫ

// -------------------- ПЕРЕМЕННЫЕ --------------------
var
let
const

// -------------------- УСЛОВИЯ --------------------

if (условие) {
	действие
} else { другое
действие
}

// ----------

switch (условие) {
	case 'проверка':
		действие;
	break;
	case 'проверка':
		действие;
	break;
	default:
		действие;
	break;
}

// ----------

// -------------------- ЦИКЛЫ --------------------

while (условие) {
	код, тело цикла
}

// ----------

do {
	тело цикла
} while (условие);

// ----------

for (начало; условие; шаг) {
	тело цикла, действия
}

// ----------
